server:
  port: 8081
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: /Users/ivanberezuckij/work/pet-projects/logistic-center/backend/user-service/certificate.p12
    key-store-password: 1PwCgNAb

grpc:
  server:
    port: 9090

spring:
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
    properties:
      schema.registry.url: "http://localhost:8081"


  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.dppmai.ru/realms/lessons
          jwk-uri: https://auth.dppmai.ru/realms/lessons/protocol/openid-connect/certs
  liquibase:
    user: userservice
    password: 12345
    change-log: 'classpath:db/changelog/db-init.yaml'
  datasource:
    url: "jdbc:postgresql://localhost:7432/userservicedb"
    username: userservice
    password: 12345
#    hikari:
#      transaction-isolation:

keycloak:
  serverUrl: https://auth.dppmai.ru
  realm: lessons
  clientId: admin-cli
  username: admin
  password: HVG-Rqf-5PV-Lp6
  realmName: lessons

springdoc:
  api-docs:
    path: /api-docs

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) %logger{36} %M - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} %M - %msg%n"
  file:
    name: log.txt
  level.root: info
